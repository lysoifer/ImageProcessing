library(pliman)
setwd(..)
setwd("..")
getwd
getwd()
library(ImageProcessing)
?epi_image_dl
slug = "test-photo-api"
form.ref = "ead5f161866447249c9c57b255dae5c7_66abc8fcd2c06"
access = "public"
cname = "photo"
path = "ImageProcessing/examples/data/orig_imgs/"
epi_image_dl(slug, form.ref, access, cname = cname, path = path)
setwd("ImageProcessing/")
setwd("..")
library(ImageProcessing)
getwd()
devtools::install_github("lysoifer/ImageProcessing")
detach("package:ImageProcessing", unload = TRUE)
devtools::install_github("lysoifer/ImageProcessing")
library(ImageProcessing)
slug = "test-photo-api"
form.ref = "ead5f161866447249c9c57b255dae5c7_66abc8fcd2c06"
access = "public"
cname = "photo"
path = "ImageProcessing/examples/data/orig_imgs/"
epi_image_dl(slug, form.ref, access, cname = cname, path = path)
library(httr)
library(jsonlite)
slug = "test-photo-api"
form.ref = "ead5f161866447249c9c57b255dae5c7_66abc8fcd2c06"
access = "public"
cname = "photo"
path = "ImageProcessing/examples/data/orig_imgs/"
epi_image_dl(slug, form.ref, access, cname = cname, path = path)
usethis::use_package(c("pliman", "foreach", "httr"))
usethis::use_package("pliman", "foreach", "httr")
usethis::use_package("pliman")
usethis::use_package("httr")
usethis::use_package("foreach")
slug = "test-photo-api"
form.ref = "ead5f161866447249c9c57b255dae5c7_66abc8fcd2c06"
access = "public"
cname = "photo"
path = "examples/data/orig_imgs/"
df_path = "examples/output/dataframes/leaf_images.csv"
if(access == "private") {
res <- httr::POST("https://five.epicollect.net/api/oauth/token",
body = list(grant_type = "client_credentials",
client_id = cID,
client_secret = secret))
httr::http_status(res)
token <- httr::content(res)$access_token
}
url.form<- paste("https://five.epicollect.net/api/export/entries/", slug, "?map_index=0&form_ref=", form.ref, "&format=csv&headers=true", sep= "")
if(access == "private") {
res1<- httr::GET(url.form, add_headers("Authorization" = paste("Bearer", token)))
} else {
res1<- httr::GET(url.form)
}
# ct1 is a dataframe of the data from epicollect
ct1<- read.csv(res1$url)
ct1
# rename columns
nms = colnames(ct1)[5:ncol(ct1)]
nms = unlist(lapply(strsplit(nms, split = "_"), "[[", 2))
colnames(ct1)[5:ncol(ct1)] = nms
ct1
# add photo shortname to dataframe
photo_short = unlist(lapply(strsplit(ct1$photo, split = "="), "[[", 4))
ct1$photo_short = photo_short
# download images
for(i in 1:nrow(ct1)) {
#fname = strsplit(ct1[i, which(grepl(cname, colnames(ct1)))], split = "=")[[1]][4]
url = ct1[i, which(grepl(cname, colnames(ct1)))]
fname = strsplit(url, split = "=")[[1]][4]
dest = paste0(path, fname)
download.file(url, destfile = dest, mode = "wb")
}
i=1
#fname = strsplit(ct1[i, which(grepl(cname, colnames(ct1)))], split = "=")[[1]][4]
url = ct1[i, which(grepl(cname, colnames(ct1)))]
fname = strsplit(url, split = "=")[[1]][4]
url
class(url)
#fname = strsplit(ct1[i, which(grepl(cname, colnames(ct1)))], split = "=")[[1]][4]
url = ct1[i, which(grepl(cname, colnames(ct1)))][1,1]
url
fname = strsplit(url, split = "=")[[1]][4]
dest = paste0(path, fname)
download.file(url, destfile = dest, mode = "wb")
devtools::document()
devtools::document()
devtools::document()
usethis::use_package("doParallel")
devtools::document()
devtools::check()
slug = "test-photo-api"
form.ref = "ead5f161866447249c9c57b255dae5c7_66abc8fcd2c06"
access = "public"
cname = "photo"
path = "ImageProcessing/examples/data/orig_imgs/"
df_path = "ImageProcessing/examples/output/dataframes/leaf_images.csv"
if(access == "private") {
res <- httr::POST("https://five.epicollect.net/api/oauth/token",
body = list(grant_type = "client_credentials",
client_id = cID,
client_secret = secret))
httr::http_status(res)
token <- httr::content(res)$access_token
}
url.form<- paste("https://five.epicollect.net/api/export/entries/", slug, "?map_index=0&form_ref=", form.ref, "&format=csv&headers=true", sep= "")
if(access == "private") {
res1<- httr::GET(url.form, add_headers("Authorization" = paste("Bearer", token)))
} else {
res1<- httr::GET(url.form)
}
# ct1 is a dataframe of the data from epicollect
ct1<- read.csv(res1$url)
# rename columns
nms = colnames(ct1)[5:ncol(ct1)]
nms = unlist(lapply(strsplit(nms, split = "_"), "[[", 2))
colnames(ct1)[5:ncol(ct1)] = nms
# add photo shortname to dataframe
img_name = unlist(lapply(strsplit(ct1$photo, split = "="), "[[", 4))
strsplit(ct1$photo, split = "=")
ct1
ct1$photo
ct1 = ct1 %>% filter(photo != "")
library(tidyverse)
ct1 = ct1 %>% filter(photo != "")
ct1
devtools::document()
devtools::document()
getwd()
?filter_()
devtools::install_github("lysoifer/ImageProcessing")
library(ImageProcessing)
library(foreach)
library(pliman)
slug = "test-photo-api"
form.ref = "ead5f161866447249c9c57b255dae5c7_66abc8fcd2c06"
access = "public"
cname = "photo"
path = "ImageProcessing/examples/data/orig_imgs/"
df_path = "ImageProcessing/examples/output/dataframes/leaf_images.csv"
getwd()
setwd("..")
library(ImageProcessing)
library(foreach)
library(pliman)
slug = "test-photo-api"
form.ref = "ead5f161866447249c9c57b255dae5c7_66abc8fcd2c06"
access = "public"
cname = "photo"
path = "ImageProcessing/examples/data/orig_imgs/"
df_path = "ImageProcessing/examples/output/dataframes/leaf_images.csv"
# download images
df = epi_image_dl(slug, form.ref, access, cname = cname, path = path, df_path = df_path)
imgpath = unlist(list.files("ImageProcessing/examples/data/orig_imgs/", pattern = ".jpg", full.names = T))
bg_file = "./../../field_work/summer_2023/panama_epiphytes/data/testing/leaf_images/back"
area = 4
dir_processed = "ImageProcessing/examples/output/leaf_area_processed_imgs/"
outdir = "ImageProcessing/examples/output/dataframes/leaf_morpho.csv"
df_morpho = leaf_area(imgpath = imgpath, bg_file = bg_file, area = area, dir_processed = dir_processed, outdir = outdir)
df_morpho
df
dfjoin = left_join(df, df_morpho, by = "img_name")
library(dplyr)
dfjoin = left_join(df, df_morpho, by = "img_name")
dfjoin
View(dfjoin)
detach("package:ImageProcessing", unload = TRUE)
devtools::install_github("lysoifer/ImageProcessing")
getwd()
library(ImageProcessing)
library(foreach)
library(pliman)
library(dplyr)
slug = "test-photo-api"
form.ref = "ead5f161866447249c9c57b255dae5c7_66abc8fcd2c06"
access = "public"
cname = "photo"
path = "ImageProcessing/examples/data/orig_imgs/"
df_path = "ImageProcessing/examples/output/dataframes/leaf_images.csv"
# download images
df = epi_image_dl(slug, form.ref, access, cname = cname, path = path, df_path = df_path)
imgpath = unlist(list.files("ImageProcessing/examples/data/orig_imgs/", pattern = ".jpg", full.names = T))
bg_file = "./../../field_work/summer_2023/panama_epiphytes/data/testing/leaf_images/back"
area = 4
dir_processed = "ImageProcessing/examples/output/leaf_area_processed_imgs/"
outdir = "ImageProcessing/examples/output/dataframes/leaf_morpho.csv"
df_morpho = leaf_area(imgpath = imgpath, bg_file = bg_file, area = area, dir_processed = dir_processed, outdir = outdir)
df_morpho
df
View(df)
detach("package:ImageProcessing", unload = TRUE)
devtools::install_github("lysoifer/ImageProcessing")
library(ImageProcessing)
library(foreach)
library(pliman)
library(dplyr)
slug = "test-photo-api"
form.ref = "ead5f161866447249c9c57b255dae5c7_66abc8fcd2c06"
access = "public"
cname = "photo"
path = "ImageProcessing/examples/data/orig_imgs/"
df_path = "ImageProcessing/examples/output/dataframes/leaf_images.csv"
# download images
df = epi_image_dl(slug, form.ref, access, cname = cname, path = path, df_path = df_path)
df
imgpath = unlist(list.files("ImageProcessing/examples/data/orig_imgs/", pattern = ".jpg", full.names = T))
bg_file = "./../../field_work/summer_2023/panama_epiphytes/data/testing/leaf_images/back"
area = 4
dir_processed = "ImageProcessing/examples/output/leaf_area_processed_imgs/"
outdir = "ImageProcessing/examples/output/dataframes/leaf_morpho.csv"
df_morpho = leaf_area(imgpath = imgpath, bg_file = bg_file, area = area, dir_processed = dir_processed, outdir = outdir)
df_morpho
df
dfjoin = left_join(df, df_morpho, by = "img_name")
dfjoin
